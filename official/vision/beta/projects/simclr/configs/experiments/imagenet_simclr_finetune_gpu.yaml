# ImageNet classification.
runtime:
  distribution_strategy: 'mirrored'
  mixed_precision_dtype: 'float16'
  loss_scale: 'dynamic'
  num_gpus: 16
task:
  model:
    mode: 'finetune'
    input_size: [224, 224, 3]
    backbone:
      type: 'resnet'
      resnet:
        model_id: 50
    backbone_trainable: true
    projection_head:
      proj_output_dim: 128
      num_proj_layers: 3
      ft_proj_idx: 1
    supervised_head:
      num_classes: 1001
  loss:
    label_smoothing: 0.0001
    one_hot: true
  evaluation:
    top_k: 5
    one_hot: true
  weight_decay: 0.0
  optimizer: 'lars'
  init_checkpoint: 'path-to-pretrain-checkpoint'
  init_checkpoint_modules: 'backbone_projection'
  train_data:
    input_path: 'imagenet-2012-tfrecord/train-001*-of-01024'
    is_training: true
    global_batch_size: 1024
    dtype: 'float16'
    parser:
      mode: 'finetune'
  validation_data:
    input_path: 'imagenet-2012-tfrecord/valid*'
    is_training: false
    global_batch_size: 1024
    dtype: 'float16'
    drop_remainder: false
    parser:
      mode: 'finetune'
trainer:
  train_steps: 37530  # 30 epochs
  validation_steps: 49 # NUM_EXAMPLES (50000) // global_batch_size
  validation_interval: 1251
  steps_per_loop: 1251  # NUM_EXAMPLES (1281167) // global_batch_size
  summary_interval: 1251
  checkpoint_interval: 1251
  optimizer_config:
    optimizer:
      type: 'lars'
      lars:
        momentum: 0.9
        weight_decay_rate: 0.0
        exclude_from_weight_decay: ['batch_normalization', 'bias', 'head_supervised']
    learning_rate:
      type: 'cosine'
      cosine:
        initial_learning_rate: 0.16  #  0.005 Ã— sqrt(BatchSize)
        decay_steps: 37530 # train_steps